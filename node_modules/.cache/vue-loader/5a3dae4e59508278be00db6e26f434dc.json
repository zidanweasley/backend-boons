{"remainingRequest":"/home/zidan/frontend-boon/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/zidan/frontend-boon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/zidan/frontend-boon/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zidan/frontend-boon/src/views/Product.vue?vue&type=template&id=35171425&scoped=true&","dependencies":[{"path":"/home/zidan/frontend-boon/src/views/Product.vue","mtime":1587417905870},{"path":"/home/zidan/frontend-boon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zidan/frontend-boon/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/zidan/frontend-boon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/zidan/frontend-boon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}